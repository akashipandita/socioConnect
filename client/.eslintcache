[{"C:\\Users\\DELL\\Desktop\\socialNetwork\\client\\src\\index.js":"1","C:\\Users\\DELL\\Desktop\\socialNetwork\\client\\src\\reportWebVitals.js":"2","C:\\Users\\DELL\\Desktop\\socialNetwork\\client\\src\\App.js":"3","C:\\Users\\DELL\\Desktop\\socialNetwork\\client\\src\\components\\screens\\Home.js":"4","C:\\Users\\DELL\\Desktop\\socialNetwork\\client\\src\\components\\Navbar.js":"5","C:\\Users\\DELL\\Desktop\\socialNetwork\\client\\src\\components\\screens\\SignIn.js":"6","C:\\Users\\DELL\\Desktop\\socialNetwork\\client\\src\\components\\screens\\Profile.js":"7","C:\\Users\\DELL\\Desktop\\socialNetwork\\client\\src\\components\\screens\\Signup.js":"8","C:\\Users\\DELL\\Desktop\\socialNetwork\\client\\src\\reducers\\userReducer.js":"9","C:\\Users\\DELL\\Desktop\\socialNetwork\\client\\src\\components\\screens\\CreatePost.js":"10","C:\\Users\\DELL\\Desktop\\socialNetwork\\client\\src\\components\\screens\\UserProfile.js":"11","C:\\Users\\DELL\\Desktop\\socialNetwork\\client\\src\\components\\screens\\SubscribedUserPosts.js":"12","C:\\Users\\DELL\\Desktop\\socialNetwork\\client\\src\\components\\screens\\Reset.js":"13","C:\\Users\\DELL\\Desktop\\socialNetwork\\client\\src\\components\\screens\\Newpassword.js":"14"},{"size":500,"mtime":499162500000,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"16"},{"size":3373,"mtime":1625775585111,"results":"18","hashOfConfig":"16"},{"size":7428,"mtime":1625672399938,"results":"19","hashOfConfig":"16"},{"size":5088,"mtime":1625781053877,"results":"20","hashOfConfig":"16"},{"size":2454,"mtime":1625776584028,"results":"21","hashOfConfig":"16"},{"size":10079,"mtime":1625727316558,"results":"22","hashOfConfig":"16"},{"size":5765,"mtime":1625687454659,"results":"23","hashOfConfig":"16"},{"size":687,"mtime":1625690368725,"results":"24","hashOfConfig":"16"},{"size":3554,"mtime":1625679567537,"results":"25","hashOfConfig":"16"},{"size":13678,"mtime":1625675102590,"results":"26","hashOfConfig":"16"},{"size":7467,"mtime":1625673720290,"results":"27","hashOfConfig":"16"},{"size":1986,"mtime":1625759732749,"results":"28","hashOfConfig":"16"},{"size":1895,"mtime":1625776438892,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1d74ptj",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"32"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\DELL\\Desktop\\socialNetwork\\client\\src\\index.js",[],["67","68"],"C:\\Users\\DELL\\Desktop\\socialNetwork\\client\\src\\reportWebVitals.js",[],"C:\\Users\\DELL\\Desktop\\socialNetwork\\client\\src\\App.js",["69","70"],"C:\\Users\\DELL\\Desktop\\socialNetwork\\client\\src\\components\\screens\\Home.js",["71","72","73","74","75"],"import React, { useContext, useEffect, useState } from 'react'\r\nimport { UserContext } from '../../App';\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst Home=()=>{\r\n    const [data,setData]=useState([]);\r\n    const {state,dispatch} = useContext(UserContext)\r\n    useEffect(()=>{\r\n        fetch('allposts',{\r\n            headers:{\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            console.log(result);\r\n            setData(result.posts)\r\n        })\r\n    },[])\r\n\r\n    const likePost=(id)=>{\r\n        fetch('/like',{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId:id\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            console.log(result);\r\n            console.log(data); //data is array of our posts\r\n            const newData=data.map(item=>{\r\n                if(item._id==result._id){\r\n                    return result\r\n                }else{\r\n                    return item\r\n                }\r\n            })\r\n            //but here the probem is same user can like post any number of times \r\n            //so before we should vheck if the likes array of the particular post\r\n            //containf the id of the user\r\n            setData(newData)\r\n        }).catch(err=>{\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    const unlikePost=(id)=>{\r\n        fetch('/unlike',{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId:id\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            console.log(result);\r\n            const newData=data.map(item=>{\r\n                if(item._id==result._id){\r\n                    return result\r\n                }else{\r\n                    return item\r\n                }\r\n            })\r\n            setData(newData)\r\n        }).catch(err=>{\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    const makeComment=(text,postId)=>{\r\n        fetch('/comment',{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId,\r\n                text\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            console.log(result);\r\n            const newData=data.map(item=>{ //iterating over the existing array\r\n                //and we will see the individual item if item id==result id\r\n                if(item._id==result._id){\r\n                    return result //result that is the updated record as item\r\n                }else{\r\n                    return item\r\n                }\r\n            })\r\n            setData(newData)\r\n        }).catch(err=>{\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    const deletePost=(postid)=>{\r\n        fetch(`/deletepost/${postid}`,{\r\n            method:\"delete\",\r\n            headers:{\r\n                Authorization:\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            console.log(result);\r\n            const newData=data.filter(item=>{ //filter the posts to remove the deleted post from data array\r\n                return item._id!==result._id\r\n            })\r\n            setData(newData)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"home\">\r\n            {\r\n                data.map(item=>{\r\n                    return(\r\n                        <div className=\"card home-card\" key={item._id}>\r\n                            {/*here below link to is used bcz in home screen when we see a post on post there is name of user who posted that so on clicking on that name we should redirect to the profile of the user */}\r\n                            {/*and the condition that we are checking is is the post is of the user currently logged in then redirect the user to his own profile */}\r\n                            <h5 style={{padding:\"7px\"}} ><Link to={item.postedBy._id!==state._id? \"/profile/\"+item.postedBy._id : \"/profile\"}>{item.postedBy.name}</Link> {item.postedBy._id==state._id\r\n                                && \r\n                                <i className=\"material-icons\" style={{float:\"right\"}}\r\n                                    onClick={()=>{deletePost(item._id)}}>delete\r\n                                </i>\r\n                            }</h5>\r\n                            <div className=\"card-image\">\r\n                                <img src={item.photo} alt=\"post\"/>\r\n                            </div>\r\n                            <div className=\"card-content\">\r\n                            <i className=\"material-icons\" style={{color:\"red\"}}>favorite</i>\r\n                            {\r\n                                item.likes.includes(state._id)? //check if likes array contains this user\r\n                                <i className=\"material-icons\" onClick={()=>{unlikePost(item._id)}}>thumb_down</i>\r\n                                //if contains then just show thumbsdown for unlike only coz same user cannot like a post more than once\r\n                                :\r\n                                <i className=\"material-icons\" onClick={()=>{likePost(item._id)}} >thumb_up</i>\r\n                                //if  not contains then user can like but cannot unlike so just show thumbs up\r\n                            }\r\n                            {/* <i className=\"material-icons\" onClick={()=>{likePost(item._id)}} >thumb_up</i>\r\n                            <i className=\"material-icons\" onClick={()=>{unlikePost(item._id)}}>thumb_down</i> */}\r\n                                <h6>{item.likes.length} likes</h6>\r\n                                <h6>{item.title}</h6>\r\n                                <p>{item.body}</p>\r\n                                {\r\n                                    item.comments.map(record=>{\r\n                                        return(\r\n                                            <h6 key={record._id}><span style={{fontWeight:\"500\"}}>{record.postedBy.name} </span>{record.text}</h6>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                <form onSubmit={(e)=>{\r\n                                    e.preventDefault()\r\n                                    makeComment(e.target[0].value,item._id)\r\n                                    console.log(e.target[0].value); //e.target gave <form><input/></from> and since we \r\n                                    //have only one input inside the form sp e.target[0] then gor value of input e.target[0].value\r\n                                }}>\r\n                                    <input type=\"text\" placeholder=\"add a comment\"/>\r\n                                </form>\r\n                            </div>\r\n                        </div>    \r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","C:\\Users\\DELL\\Desktop\\socialNetwork\\client\\src\\components\\Navbar.js",[],"C:\\Users\\DELL\\Desktop\\socialNetwork\\client\\src\\components\\screens\\SignIn.js",["76"],"C:\\Users\\DELL\\Desktop\\socialNetwork\\client\\src\\components\\screens\\Profile.js",["77","78"],"// import React, { useContext, useEffect, useState } from 'react'\r\n// import {UserContext} from '../../App'\r\n// const Profile=()=>{\r\n//     const [mypics,setPics]=useState([]);\r\n//     const{state,dispatch}=useContext(UserContext)\r\n//     const [image,setImage]=useState(\"\"); //for asking profile picture of user when he signs up\r\n//     const [url,setUrl]=useState(\"\"); \r\n//     useEffect(()=>{\r\n//         fetch('/myposts',{\r\n//             headers:{\r\n//                 \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n//             }\r\n//         }).then(res=>res.json())\r\n//         .then(result=>{\r\n//             console.log(result);\r\n//             setPics(result.mypost);\r\n//         })\r\n//         console.log(state);\r\n//     },[])\r\n\r\n//     useEffect(()=>{\r\n//         const data=new FormData() //to upload afile we need to create a new formdata(read from documentation{google->\"fetch post\"})\r\n//         data.append(\"file\",image);//the file we need to upload is in image\r\n//         data.append(\"upload_preset\",\"social-network\")//upload preset that we made\r\n//         data.append(\"cloud_name\",\"akashisocialnetwork\")//name of our cloud    }\r\n//         fetch(\"https://api.cloudinary.com/v1_1/akashisocialnetwork/image/upload\",{\r\n//             method:\"post\",\r\n//             body:data\r\n//         })\r\n//         .then(res=>res.json())\r\n//         .then(data=>{\r\n//             //after updating we need to make changes in our state as well as local storage\r\n//             setUrl(data.url)\r\n//             console.log(data);\r\n//             localStorage.setItem(\"user\",JSON.stringify({...state,pic:data.pic}))\r\n//             dispatch({type:\"UPDATEPIC\",payload:data.pic})\r\n//             window.location.reload()\r\n//         })\r\n//         .catch(err=>{\r\n//             console.log(err)\r\n//         })\r\n//     },[image])\r\n\r\n//     const updatePhoto=(file)=>{\r\n//         setImage(file)\r\n//     }\r\n\r\n//     return (\r\n//         <div style={{maxWidth:\"550px\",margin:\"0px auto\"}}>\r\n//             <div style={{\r\n//                 margin:\"18px 0px\",\r\n//                 borderBottom:\"1px solid grey\"\r\n//             }}>\r\n\r\n            \r\n//             <div style={{\r\n//                 display:\"flex\",\r\n//                 justifyContent:\"space-around\",\r\n//                 margin:\"18px 0px\",\r\n//                 borderBottom:\"1px solid grey\"\r\n//             }}>\r\n//                 <div>\r\n//                     <img style={{width:\"160px\",height:\"160px\",borderRadius:\"80px\"}}\r\n//                     src={state?state.pic:\"loading\"}\r\n//                     alt=\"profile \"\r\n//                     />\r\n//                 </div>\r\n//                 <div>\r\n//                     <h4>{state?state.name:\"loading\"}</h4> \r\n//                     <div style={{display:\"flex\",justifyContent:\"space-between\",width:\"108%\"}}>\r\n//                         <h6>{mypics.length} posts</h6>\r\n//                         <h6>{state?state.followers.length:\"0\"} followers</h6>\r\n//                         <h6>{state?state.following.length:\"0\"} following</h6>\r\n//                     </div>\r\n//                 </div>\r\n//             </div>\r\n//             {/* <button className=\"btn waves-effect waves-light\" >\r\n//                 Update Profile Picture\r\n//             </button> */}\r\n//             <div className=\"file-field input-field\" style={{margin:\"10px\"}}>\r\n//             <div className=\"btn #64b5f6 blue darken-1\">\r\n//                 <span>Update pic</span>\r\n//                 <input type=\"file\" onChange={(e)=>updatePhoto(e.target.files[0])} />\r\n//             </div>\r\n//             <div className=\"file-path-wrapper\">\r\n//                 <input className=\"file-path validate\" type=\"text\" />\r\n//             </div>\r\n//             </div>\r\n//             </div> \r\n//             <div className=\"gallery\">\r\n//                 {\r\n//                     mypics.map(item=>{\r\n//                         return(\r\n//                             <img className=\"item\" src={item.photo} alt={item.title} />\r\n//                         )\r\n//                     })\r\n//                 }\r\n//                 {/* <img className=\"item\" src=\"https://images.unsplash.com/photo-1605993439219-9d09d2020fa5?ixid=MXwxMjA3fDB8MHxzZWFyY2h8NXx8cHJvZmlsZSUyMHBpY3R1cmV8ZW58MHx8MHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\" alt=\"feed\"/>\r\n//                 <img className=\"item\" src=\"https://images.unsplash.com/photo-1605993439219-9d09d2020fa5?ixid=MXwxMjA3fDB8MHxzZWFyY2h8NXx8cHJvZmlsZSUyMHBpY3R1cmV8ZW58MHx8MHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\" alt=\"feed\"/>\r\n//                 <img className=\"item\" src=\"https://images.unsplash.com/photo-1605993439219-9d09d2020fa5?ixid=MXwxMjA3fDB8MHxzZWFyY2h8NXx8cHJvZmlsZSUyMHBpY3R1cmV8ZW58MHx8MHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\" alt=\"feed\"/>\r\n//                 <img className=\"item\" src=\"https://images.unsplash.com/photo-1605993439219-9d09d2020fa5?ixid=MXwxMjA3fDB8MHxzZWFyY2h8NXx8cHJvZmlsZSUyMHBpY3R1cmV8ZW58MHx8MHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\" alt=\"feed\"/>\r\n//                 <img className=\"item\" src=\"https://images.unsplash.com/photo-1605993439219-9d09d2020fa5?ixid=MXwxMjA3fDB8MHxzZWFyY2h8NXx8cHJvZmlsZSUyMHBpY3R1cmV8ZW58MHx8MHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\" alt=\"feed\"/>\r\n//                 <img className=\"item\" src=\"https://images.unsplash.com/photo-1605993439219-9d09d2020fa5?ixid=MXwxMjA3fDB8MHxzZWFyY2h8NXx8cHJvZmlsZSUyMHBpY3R1cmV8ZW58MHx8MHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\" alt=\"feed\"/> */}\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default Profile;\r\n\r\n// /*for {state?state.name:\"loading\"} -> bcz when we were loading it was showing error that name is null as it might take little bit to fetch*/\r\n\r\nimport React,{useEffect,useState,useContext} from 'react'\r\nimport {UserContext} from '../../App'\r\n\r\nconst Profile  = ()=>{\r\n    const [mypics,setPics] = useState([])\r\n    const {state,dispatch} = useContext(UserContext)\r\n    const [image,setImage] = useState(\"\")\r\n    useEffect(()=>{\r\n       fetch('/myposts',{\r\n           headers:{\r\n               \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n           }\r\n       }).then(res=>res.json())\r\n       .then(result=>{\r\n           console.log(result)\r\n           setPics(result.mypost)\r\n       })\r\n    },[])\r\n    useEffect(()=>{\r\n       if(image){\r\n        const data=new FormData() //to upload afile we need to create a new formdata(read from documentation{google->\"fetch post\"})\r\n        data.append(\"file\",image);//the file we need to upload is in image\r\n        data.append(\"upload_preset\",\"social-network\")//upload preset that we made\r\n        data.append(\"cloud_name\",\"akashisocialnetwork\")//name of our cloud    }\r\n        fetch(\"https://api.cloudinary.com/v1_1/akashisocialnetwork/image/upload\",{\r\n            method:\"post\",\r\n            body:data\r\n        })\r\n        .then(res=>res.json())\r\n        .then(data=>{\r\n    \r\n       \r\n           fetch('/updatepic',{\r\n               method:\"put\",\r\n               headers:{\r\n                   \"Content-Type\":\"application/json\",\r\n                   \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n               },\r\n               body:JSON.stringify({\r\n                   pic:data.url\r\n               })\r\n           }).then(res=>res.json())\r\n           .then(result=>{\r\n               console.log(result)\r\n               localStorage.setItem(\"user\",JSON.stringify({...state,pic:result.pic}))\r\n               dispatch({type:\"UPDATEPIC\",payload:result.pic})\r\n               window.location.reload()\r\n           })\r\n       \r\n        })\r\n        .catch(err=>{\r\n            console.log(err)\r\n        })\r\n       }\r\n    },[image])\r\n\r\n    const updatePhoto = (file)=>{\r\n        console.log(state);\r\n        console.log(mypics);\r\n        setImage(file)\r\n    }\r\n\r\n    const deleteacc=()=>{\r\n        \r\n    }\r\n\r\n   return (\r\n       <div style={{maxWidth:\"550px\",margin:\"0px auto\"}}>\r\n           <div style={{\r\n              margin:\"18px 0px\",\r\n               borderBottom:\"1px solid grey\"\r\n           }}>\r\n\r\n         \r\n           <div style={{\r\n               display:\"flex\",\r\n               justifyContent:\"space-around\",\r\n              \r\n           }}>\r\n               <div>\r\n                   <img style={{width:\"160px\",height:\"160px\",borderRadius:\"80px\"}}\r\n                   src={state?state.pic:\"loading\"}\r\n                   />\r\n                 \r\n               </div>\r\n               <div>\r\n                    <button style={{position:\"absolute\",marginLeft:\"550px\"}} className=\"btn #c62828 red darken-3\"\r\n                        onClick={()=>{deleteacc()}}>\r\n                        Delete Account\r\n                    </button>\r\n                   <h4>{state?state.name:\"loading\"}</h4>\r\n                   <h5>{state?state.email:\"loading\"}</h5>\r\n                   <div style={{display:\"flex\",justifyContent:\"space-between\",width:\"108%\"}}>\r\n                       <h6>{mypics.length} posts</h6>\r\n                       <h6>{state?state.followers.length:\"loading\"} followers</h6>\r\n                       <h6>{state?state.following.length:\"loading\"} following</h6>\r\n                   </div>\r\n\r\n               </div>\r\n           </div>\r\n        \r\n            <div className=\"file-field input-field\" style={{margin:\"10px\"}}>\r\n            <div className=\"btn #64b5f6 blue darken-1\">\r\n                <span>Update pic</span>\r\n                <input type=\"file\" onChange={(e)=>updatePhoto(e.target.files[0])} />\r\n            </div>\r\n            <div className=\"file-path-wrapper\">\r\n                <input className=\"file-path validate\" type=\"text\" />\r\n            </div>\r\n            </div>\r\n            </div>      \r\n           <div className=\"gallery\">\r\n               {\r\n                   mypics.map(item=>{\r\n                       return(\r\n                        <img key={item._id} className=\"item\" src={item.photo} alt={item.title}/>  \r\n                       )\r\n                   })\r\n               }\r\n\r\n           \r\n           </div>\r\n       </div>\r\n   )\r\n}\r\n\r\n\r\nexport default Profile","C:\\Users\\DELL\\Desktop\\socialNetwork\\client\\src\\components\\screens\\Signup.js",["79","80","81"],"import React, { useEffect, useState } from 'react';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport M from 'materialize-css';\r\n\r\nconst Signup=()=>{\r\n    const history=useHistory();\r\n\r\n    const [name,setName]=useState(\"\");\r\n    const [password,setPassword]=useState(\"\");\r\n    const [email,setEmail]=useState(\"\");\r\n    const [image,setImage]=useState(\"\"); //for asking profile picture of user when he signs up\r\n    const [url,setUrl]=useState(undefined); //earlier instead of using undefined we had put \"\" this empty string coz when we have not uploaded\r\n    //any profile pic then in backend there will be nothing in pic end it will use the default pic but when we used \"\" in backend we had empty string \r\n    //so that caused broken image symbol in profile picture so we used undefined bcz a undefined thing will not exist\r\n\r\n    useEffect(()=>{\r\n        //using if condition bcz we dont want this useEffect to kick in when component mounts that means when the instance of components\r\n        //is created and inserted into DOM\r\n        //we only want this useEffect to kick in image is successfully uploaded\r\n        if(url){//if url exists\r\n            uploadFields();\r\n        }\r\n    },[url])\r\n\r\n    const uploadPic=()=>{//this will be optional may be user will want to upload profile picture later\r\n        const data=new FormData() //to upload afile we need to create a new formdata(read from documentation{google->\"fetch post\"})\r\n        data.append(\"file\",image);//the file we need to upload is in image\r\n        data.append(\"upload_preset\",\"social-network\")//upload preset that we made\r\n        data.append(\"cloud_name\",\"akashisocialnetwork\")//name of our cloud    }\r\n        fetch(\"https://api.cloudinary.com/v1_1/akashisocialnetwork/image/upload\",{\r\n            method:\"post\",\r\n            body:data\r\n        })\r\n        .then(res=>res.json())\r\n        .then(data=>{\r\n            setUrl(data.url)\r\n        })\r\n        .catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const uploadFields=()=>{\r\n        if(!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)){\r\n            M.toast({html: \"invalid email\",classes:\"#c62828 red darken-3\"})\r\n            return\r\n        }\r\n        fetch(\"http://localhost:5000/signup\",{\r\n            method:\"post\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body:JSON.stringify({\r\n                name,\r\n                password,\r\n                email,\r\n                pic:url\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n            if(data.error){\r\n                M.toast({html: data.error, classes:\"#c62828 red darken-3\"})\r\n            }\r\n            else{\r\n                M.toast({html: data.message, classes:\"#43a047 green darken-1\"})\r\n                history.push('/signin');\r\n            }\r\n        }).catch(err=>{\r\n            console.log(err);\r\n        })\r\n    }\r\n    \r\n    const PostData=()=>{\r\n        // console.log(\"in\");\r\n        if(image){ //if we have uploaded image\r\n            uploadPic() // but if we posted profile picture we still need ti fill other data that is email and all\r\n            //but here we have put all that logic in uploadFields() and we are calling in else block so we will use\r\n            //useEffect and whever we upload image and set url usin setUrl state that is when this setUrl is updated we \r\n            //will fire a callback to again post these feilds(name,pw,email)\r\n        }else{\r\n            uploadFields()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"mycard\">\r\n            <div className=\"card auth-card\">\r\n                <h2>SocialConnect</h2>\r\n                <input\r\n                type=\"text\"\r\n                placeholder=\"name\"\r\n                value={name}\r\n                onChange={(e)=>setName(e.target.value)}\r\n                />\r\n                <input\r\n                type=\"text\"\r\n                placeholder=\"email\"\r\n                value={email}\r\n                onChange={(e)=>setEmail(e.target.value)}\r\n                />\r\n                <input\r\n                type=\"password\"\r\n                placeholder=\"password\"\r\n                value={password}\r\n                onChange={(e)=>setPassword(e.target.value)}\r\n                />\r\n                <div className=\"file-field input-field\">\r\n                    <div className=\"btn\">\r\n                        <span>Upload Picture</span>\r\n                        <input type=\"file\" onChange={(e)=>setImage(e.target.files[0])} />\r\n                    </div>\r\n                    <div className=\"file-path-wrapper\">\r\n                        <input className=\"file-path validate\" type=\"text\"/>\r\n                    </div>\r\n                </div>\r\n                <button className=\"btn waves-effect waves-light\" onClick={()=>PostData()}>\r\n                    SignUp\r\n                </button>\r\n                <h5>\r\n                    <Link to=\"/signin\">Already have an account ?</Link>\r\n                </h5>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Signup;\r\n\r\n//CORS error comes when our react server is running on localhost 3000 and our nodejs server\r\n//is running on local host 5000, so both the apps are running on diff url/diff domain , if \r\n//we will send the request from one domain to another domain server will not allow any requests\r\n//from another domain, so our request is blocked due to CORS policy, so we need to install a package \r\n//called npm cors and use in app.js but we can do something better by making use of proxy, with rpoxy\r\n//we can fool our react server,  so we will create proxy in package.json file","C:\\Users\\DELL\\Desktop\\socialNetwork\\client\\src\\reducers\\userReducer.js",["82"],"export const initialState=null\r\n\r\nexport const reducer=(state,action)=>{\r\n    if(action.type===\"USER\"){\r\n        return action.payload\r\n    }\r\n    if(action.type===\"CLEAR\"){\r\n        return null\r\n    }\r\n    if(action.type===\"UPDATE\"){\r\n        return {\r\n            ...state,//spread the previous state\r\n            //then append in the state followers and following\r\n            followers:action.payload.followers,//followers will be coming from action.payload.followers\r\n            following:action.payload.following\r\n        }\r\n    }\r\n    if(action.type==\"UPDATEPIC\"){\r\n        return{\r\n            ...state,\r\n            pic:action.payload.pic\r\n        }\r\n    }\r\n    return state\r\n}","C:\\Users\\DELL\\Desktop\\socialNetwork\\client\\src\\components\\screens\\CreatePost.js",["83"],"import React, {useState, useEffect} from 'react';\r\nimport { useHistory} from 'react-router-dom';\r\nimport M from 'materialize-css';\r\n\r\nconst CreatePost = () => {\r\n\r\n    const history=useHistory();\r\n\r\n    const [title,setTitle]=useState(\"\");\r\n    const [body,setBody]=useState(\"\");\r\n    const [image,setImage]=useState(\"\"); // we have to upload ths image to a separate storage service so we will use\r\n    //cloudinary to upload my images and we will be storing url of that in our databse\r\n    const [url,setUrl]=useState(\"\");\r\n\r\n    useEffect(()=>{\r\n        if(url){\r\n            fetch(\"http://localhost:5000/createpost\",{\r\n                method:\"post\",\r\n                headers:{\r\n                    \"Content-Type\":\"application/json\",\r\n                    \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n                },\r\n                body:JSON.stringify({\r\n                    title,\r\n                    body,\r\n                    pic:url\r\n                })\r\n            }).then(res=>res.json())\r\n            .then(data=>{\r\n                // console.log(data);\r\n                if(data.error){\r\n                    M.toast({html: data.error, classes:\"#c62828 red darken-3\"})\r\n                }\r\n                else{\r\n                    M.toast({html: \"Created Post Successfully\", classes:\"#43a047 green darken-1\"})\r\n                    history.push('/');\r\n                }\r\n            }).catch(err=>{\r\n                console.log(err);\r\n            })\r\n        }\r\n    },[url])\r\n\r\n    //first we will be posting a image then we will be making a separate network request to our nodejs server\r\n    const postDetails=()=>{\r\n        //code for uploading image\r\n        const data=new FormData() //to upload afile we need to create a new formdata(read from documentation{google->\"fetch post\"})\r\n        data.append(\"file\",image);//the file we need to upload is in image\r\n        data.append(\"upload_preset\",\"social-network\")//upload preset that we made\r\n        data.append(\"cloud_name\",\"akashisocialnetwork\")//name of our cloud    }\r\n        fetch(\"https://api.cloudinary.com/v1_1/akashisocialnetwork/image/upload\",{\r\n            method:\"post\",\r\n            body:data\r\n        })\r\n        .then(res=>res.json())\r\n        .then(data=>{\r\n            setUrl(data.url)\r\n        })\r\n        .catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n    return (\r\n        <div className=\"card input-filed\" style={{\r\n            margin:\"30px auto\",\r\n            maxWidth:\"500px\",\r\n            padding:\"20px\",\r\n            textAlign:\"center\"\r\n        }}>\r\n            <input \r\n            type=\"text\" \r\n            placeholder=\"title\"\r\n            value={title}\r\n            onChange={(e)=>setTitle(e.target.value)}\r\n            />\r\n            <input \r\n            type=\"text\" \r\n            placeholder=\"body\"\r\n            value={body}\r\n            onChange={(e)=>setBody(e.target.value)}\r\n            />\r\n            <div className=\"file-field input-field\">\r\n                <div className=\"btn\">\r\n                    <span>Upload imaggee</span>\r\n                    <input type=\"file\" onChange={(e)=>setImage(e.target.files[0])} />\r\n                </div>\r\n                <div className=\"file-path-wrapper\">\r\n                    <input className=\"file-path validate\" type=\"text\"/>\r\n                </div>\r\n            </div>\r\n                <button className=\"btn waves-effect waves-light\" onClick={()=>postDetails()}>\r\n                    Submit Post\r\n                </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreatePost\r\n","C:\\Users\\DELL\\Desktop\\socialNetwork\\client\\src\\components\\screens\\UserProfile.js",["84","85","86"],"// import React, { useContext, useEffect, useState } from 'react'\r\n// import { useParams } from 'react-router';\r\n// import {UserContext} from '../../App'\r\n// const Profile=()=>{\r\n//     const [userProfile,setProfile]=useState(null);\r\n//     const [showfollow,setShowFollow]=useState(true); //this will be used to hide follow button once the user has already followed that user\r\n//     const{state,dispatch}=useContext(UserContext);\r\n//     const {userid}=useParams();\r\n//     console.log(userid);\r\n//     useEffect(()=>{\r\n//         fetch(`/user/${userid}`,{\r\n//             headers:{\r\n//                 \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n//             }\r\n//         }).then(res=>res.json())\r\n//         .then(result=>{\r\n//             console.log(result);\r\n//             setProfile(result);\r\n//         })\r\n//         console.log(state);\r\n//     },[])\r\n\r\n//     const followUser=()=>{\r\n//         fetch('/follow',{\r\n//             method:\"put\",\r\n//             headers:{\r\n//                 \"Content-Type\":\"application/json\",\r\n//                 \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n//             },\r\n//             body:JSON.stringify({\r\n//                 followId:userid\r\n//             })\r\n//         }).then(res=>res.json())\r\n//         .then(data=>{\r\n//             console.log(data); //data is giving details of user who is following\r\n//             //in our state we had id email and name of the user but we wanted to add followers and following of that user also to the state so dispatch to change in local storage also\r\n//             dispatch({type:\"UPDATE\",payload:{following:data.following,followers:data.followers}}) //to update our state, following array we have in data.following\r\n//             //payload will be an object with 2 keys following and followers\r\n            \r\n//             //we need to update local storage so below \r\n//             localStorage.setItem(\"user\",JSON.stringify(data));//stringify bcz in localstorage we can only store strings\r\n            \r\n//             //update our state below\r\n//             setProfile((prevState)=>{\r\n//                 console.log(prevState);\r\n//                 return{\r\n//                     ...prevState,\r\n//                     user:{//over write the user feild with updated record\r\n//                         ...prevState.user,\r\n//                         followers:[...prevState.user.followers,data._id]//in followers field; , data._id->appending id of current loggedin user\r\n//                     }\r\n//                 }\r\n//             })\r\n//             setShowFollow(false);\r\n//         })\r\n//     }\r\n\r\n//     const unfollowUser=()=>{\r\n//         fetch('/unfollow',{\r\n//             method:\"put\",\r\n//             headers:{\r\n//                 \"Content-Type\":\"application/json\",\r\n//                 \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n//             },\r\n//             body:JSON.stringify({\r\n//                 unfollowId:userid\r\n//             })\r\n//         }).then(res=>res.json())\r\n//         .then(data=>{\r\n//             console.log(data); //data is giving details of user who is following\r\n//             dispatch({type:\"UPDATE\",payload:{following:data.following,followers:data.followers}}) //?\r\n//             localStorage.setItem(\"user\",JSON.stringify(data));//stringify bcz in localstorage we can only store strings\r\n//             setProfile((prevState)=>{\r\n//                 //we need to remove data._id from our followers\r\n//                 console.log(prevState);\r\n//                 const newFollower=prevState.user.followers.filter(item=>item!=data._id)\r\n//                 return{\r\n//                     ...prevState,\r\n//                     user:{\r\n//                         ...prevState.user,\r\n//                         followers:newFollower\r\n//                     }\r\n//                 }\r\n//             })\r\n//         })\r\n//     }\r\n\r\n//     return (\r\n//         <>\r\n//             {userProfile ?\r\n            \r\n//             <div style={{maxWidth:\"550px\",margin:\"0px auto\"}}>\r\n//                 <div style={{\r\n//                     display:\"flex\",\r\n//                     justifyContent:\"space-around\",\r\n//                     margin:\"18px 0px\",\r\n//                     borderBottom:\"1px solid grey\"\r\n//                 }}>\r\n//                     <div>\r\n//                         <img style={{width:\"160px\",height:\"160px\",borderRadius:\"80px\"}}\r\n//                         src=\"https://images.unsplash.com/photo-1605993439219-9d09d2020fa5?ixid=MXwxMjA3fDB8MHxzZWFyY2h8NXx8cHJvZmlsZSUyMHBpY3R1cmV8ZW58MHx8MHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\"\r\n//                         alt=\"profile \"\r\n//                         />\r\n//                     </div>\r\n//                     <div>\r\n//                         <h4>{userProfile.user.name}</h4> \r\n//                         <h5>{userProfile.user.email}</h5> \r\n//                         <div style={{display:\"flex\",justifyContent:\"space-between\",width:\"108%\"}}>\r\n//                             <h6>{userProfile.posts.length} posts</h6>\r\n//                             <h6>{userProfile.user.followers.length} followers</h6>\r\n//                             <h6>{userProfile.user.following.length} following</h6>\r\n//                         </div>\r\n//                         {//if user has not followed this user then show follow button otherwise show unfollow button\r\n//                             showfollow?\r\n//                             <button className=\"btn waves-effect waves-light\" onClick={()=>followUser()}>\r\n//                                 Follow\r\n//                             </button>\r\n//                             :\r\n//                             <button className=\"btn waves-effect waves-light\" onClick={()=>unfollowUser()}>\r\n//                                 Unfollow\r\n//                             </button>\r\n//                         }\r\n//                     </div>\r\n//                 </div>\r\n//                 <div className=\"gallery\">\r\n//                     {\r\n//                         userProfile.posts.map(item=>{\r\n//                             return(\r\n//                                 <img className=\"item\" src={item.photo} alt={item.title} />\r\n//                             )\r\n//                         })\r\n//                     }\r\n//                     {/* <img className=\"item\" src=\"https://images.unsplash.com/photo-1605993439219-9d09d2020fa5?ixid=MXwxMjA3fDB8MHxzZWFyY2h8NXx8cHJvZmlsZSUyMHBpY3R1cmV8ZW58MHx8MHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\" alt=\"feed\"/>\r\n//                     <img className=\"item\" src=\"https://images.unsplash.com/photo-1605993439219-9d09d2020fa5?ixid=MXwxMjA3fDB8MHxzZWFyY2h8NXx8cHJvZmlsZSUyMHBpY3R1cmV8ZW58MHx8MHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\" alt=\"feed\"/>\r\n//                     <img className=\"item\" src=\"https://images.unsplash.com/photo-1605993439219-9d09d2020fa5?ixid=MXwxMjA3fDB8MHxzZWFyY2h8NXx8cHJvZmlsZSUyMHBpY3R1cmV8ZW58MHx8MHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\" alt=\"feed\"/>\r\n//                     <img className=\"item\" src=\"https://images.unsplash.com/photo-1605993439219-9d09d2020fa5?ixid=MXwxMjA3fDB8MHxzZWFyY2h8NXx8cHJvZmlsZSUyMHBpY3R1cmV8ZW58MHx8MHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\" alt=\"feed\"/>\r\n//                     <img className=\"item\" src=\"https://images.unsplash.com/photo-1605993439219-9d09d2020fa5?ixid=MXwxMjA3fDB8MHxzZWFyY2h8NXx8cHJvZmlsZSUyMHBpY3R1cmV8ZW58MHx8MHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\" alt=\"feed\"/>\r\n//                     <img className=\"item\" src=\"https://images.unsplash.com/photo-1605993439219-9d09d2020fa5?ixid=MXwxMjA3fDB8MHxzZWFyY2h8NXx8cHJvZmlsZSUyMHBpY3R1cmV8ZW58MHx8MHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\" alt=\"feed\"/> */}\r\n//                 </div>\r\n//             </div>\r\n            \r\n//             : <h2>loading...</h2>}\r\n//         </>\r\n//     );\r\n// }\r\n\r\n// export default Profile;\r\n// //component for other users profiles, when we view some other users profile\r\n\r\n// /*for {state?state.name:\"loading\"} -> bcz when we were loading it was showing error that name is null*/\r\n\r\n\r\n\r\nimport React,{useEffect,useState,useContext} from 'react'\r\nimport {UserContext} from '../../App'\r\nimport {useParams} from 'react-router-dom'\r\nconst Profile  = ()=>{\r\n    const [userProfile,setProfile] = useState(null)\r\n    \r\n    const {state,dispatch} = useContext(UserContext)\r\n    const {userid} = useParams()\r\n    const [showfollow,setShowFollow] = useState(state?!state.following.includes(userid):true) //here we are not just setting value to true initially\r\n    //coz if we are following a user then we should be shown unfollow button but as this showfollow is a state it will be gone when we will refresh our\r\n    //page and then instead of unfollow we will see follow button there so this value should not be initialised to true and with above logic with the help of state\r\n    useEffect(()=>{\r\n       fetch(`/user/${userid}`,{\r\n           headers:{\r\n               \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n           }\r\n       }).then(res=>res.json())\r\n       .then(result=>{\r\n           //console.log(result)\r\n         \r\n            setProfile(result)\r\n       })\r\n    },[])\r\n\r\n\r\n    const followUser = ()=>{\r\n        fetch('/follow',{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem('jwt')\r\n            },\r\n            body:JSON.stringify({\r\n                followId:userid\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n        \r\n            dispatch({type:\"UPDATE\",payload:{following:data.following,followers:data.followers}})\r\n             localStorage.setItem(\"user\",JSON.stringify(data))\r\n             setProfile((prevState)=>{\r\n                 return {\r\n                     ...prevState,\r\n                     user:{\r\n                         ...prevState.user,\r\n                         followers:[...prevState.user.followers,data._id]\r\n                        }\r\n                 }\r\n             })\r\n             setShowFollow(false)\r\n        })\r\n    }\r\n    const unfollowUser = ()=>{\r\n        fetch('/unfollow',{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem('jwt')\r\n            },\r\n            body:JSON.stringify({\r\n                unfollowId:userid\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n            \r\n            dispatch({type:\"UPDATE\",payload:{following:data.following,followers:data.followers}})\r\n             localStorage.setItem(\"user\",JSON.stringify(data))\r\n            \r\n             setProfile((prevState)=>{\r\n                const newFollower = prevState.user.followers.filter(item=>item != data._id )\r\n                 return {\r\n                     ...prevState,\r\n                     user:{\r\n                         ...prevState.user,\r\n                         followers:newFollower\r\n                        }\r\n                 }\r\n             })\r\n             setShowFollow(true) //as when we click on unfollow and user unfollows the user we need to hide unfollow button then and show follow button only,\r\n             //so when we are unfollowing user we need to update our state\r\n             \r\n        })\r\n    }\r\n   return (\r\n       <>\r\n       {userProfile ?\r\n       <div style={{maxWidth:\"550px\",margin:\"0px auto\"}}>\r\n           <div style={{\r\n               display:\"flex\",\r\n               justifyContent:\"space-around\",\r\n               margin:\"18px 0px\",\r\n               borderBottom:\"1px solid grey\"\r\n           }}>\r\n               <div>\r\n                   <img style={{width:\"160px\",height:\"160px\",borderRadius:\"80px\"}}\r\n                   src={userProfile.user.pic}\r\n                   />\r\n               </div>\r\n               <div>\r\n                   <h4>{userProfile.user.name}</h4>\r\n                   <h5>{userProfile.user.email}</h5>\r\n                   <div style={{display:\"flex\",justifyContent:\"space-between\",width:\"108%\"}}>\r\n                       <h6>{userProfile.posts.length} posts</h6>\r\n                       <h6>{userProfile.user.followers.length} followers</h6>\r\n                       <h6>{userProfile.user.following.length} following</h6>\r\n                   </div>\r\n                   {showfollow?\r\n                   <button style={{\r\n                       margin:\"10px\"\r\n                   }} className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\r\n                    onClick={()=>followUser()}\r\n                    >\r\n                        Follow\r\n                    </button>\r\n                    : \r\n                    <button\r\n                    style={{\r\n                        margin:\"10px\"\r\n                    }}\r\n                    className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\r\n                    onClick={()=>unfollowUser()}\r\n                    >\r\n                        UnFollow\r\n                    </button>\r\n                    }\r\n                   \r\n                  \r\n\r\n               </div>\r\n           </div>\r\n     \r\n           <div className=\"gallery\">\r\n               {\r\n                   userProfile.posts.map(item=>{\r\n                       return(\r\n                        <img key={item._id} className=\"item\" src={item.photo} alt={item.title}/>  \r\n                       )\r\n                   })\r\n               }\r\n\r\n           \r\n           </div>\r\n       </div>\r\n       \r\n       \r\n       : <h2>loading...!</h2>}\r\n       \r\n       </>\r\n   )\r\n}\r\n\r\n\r\nexport default Profile","C:\\Users\\DELL\\Desktop\\socialNetwork\\client\\src\\components\\screens\\SubscribedUserPosts.js",["87","88","89","90","91"],"import React, { useContext, useEffect, useState } from 'react'\r\nimport { UserContext } from '../../App';\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst Home=()=>{\r\n    const [data,setData]=useState([]);\r\n    const {state,dispatch} = useContext(UserContext)\r\n    useEffect(()=>{\r\n        console.log(\"here react\");\r\n        fetch('/getsubpost',{\r\n            headers:{\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            console.log(result);\r\n            setData(result.posts)\r\n        })\r\n    },[])\r\n\r\n    const likePost=(id)=>{\r\n        fetch('/like',{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId:id\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            console.log(result);\r\n            console.log(data); //data is array of our posts\r\n            const newData=data.map(item=>{\r\n                if(item._id==result._id){\r\n                    return result\r\n                }else{\r\n                    return item\r\n                }\r\n            })\r\n            //but here the probem is same user can like post any number of times \r\n            //so before we should vheck if the likes array of the particular post\r\n            //containf the id of the user\r\n            setData(newData)\r\n        }).catch(err=>{\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    const unlikePost=(id)=>{\r\n        fetch('/unlike',{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId:id\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            console.log(result);\r\n            const newData=data.map(item=>{\r\n                if(item._id==result._id){\r\n                    return result\r\n                }else{\r\n                    return item\r\n                }\r\n            })\r\n            setData(newData)\r\n        }).catch(err=>{\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    const makeComment=(text,postId)=>{\r\n        fetch('/comment',{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId,\r\n                text\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            console.log(result);\r\n            const newData=data.map(item=>{ //iterating over the existing array\r\n                //and we will see the individual item if item id==result id\r\n                if(item._id==result._id){\r\n                    return result //result that is the updated record as item\r\n                }else{\r\n                    return item\r\n                }\r\n            })\r\n            setData(newData)\r\n        }).catch(err=>{\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    const deletePost=(postid)=>{\r\n        fetch(`/deletepost/${postid}`,{\r\n            method:\"delete\",\r\n            headers:{\r\n                Authorization:\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            console.log(result);\r\n            const newData=data.filter(item=>{ //filter the posts to remove the deleted post from data array\r\n                return item._id!==result._id\r\n            })\r\n            setData(newData)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"home\">\r\n            {\r\n                data.map(item=>{\r\n                    return(\r\n                        <div className=\"card home-card\" key={item._id}>\r\n                            {/*here below link to is used bcz in home screen when we see a post on post there is name of user who posted that so on clicking on that name we should redirect to the profile of the user */}\r\n                            {/*and the condition that we are checking is is the post is of the user currently logged in then redirect the user to his own profile */}\r\n                            <h5 style={{padding:\"7px\"}} ><Link to={item.postedBy._id!==state._id? \"/profile/\"+item.postedBy._id : \"/profile\"}>{item.postedBy.name}</Link> {item.postedBy._id==state._id\r\n                                && \r\n                                <i className=\"material-icons\" style={{float:\"right\"}}\r\n                                    onClick={()=>{deletePost(item._id)}}>delete\r\n                                </i>\r\n                            }</h5>\r\n                            <div className=\"card-image\">\r\n                                <img src={item.photo} alt=\"post\"/>\r\n                            </div>\r\n                            <div className=\"card-content\">\r\n                            <i className=\"material-icons\" style={{color:\"red\"}}>favorite</i>\r\n                            {\r\n                                item.likes.includes(state._id)? //check if likes array contains this user\r\n                                <i className=\"material-icons\" onClick={()=>{unlikePost(item._id)}}>thumb_down</i>\r\n                                //if contains then just show thumbsdown for unlike only coz same user cannot like a post more than once\r\n                                :\r\n                                <i className=\"material-icons\" onClick={()=>{likePost(item._id)}} >thumb_up</i>\r\n                                //if  not contains then user can like but cannot unlike so just show thumbs up\r\n                            }\r\n                            {/* <i className=\"material-icons\" onClick={()=>{likePost(item._id)}} >thumb_up</i>\r\n                            <i className=\"material-icons\" onClick={()=>{unlikePost(item._id)}}>thumb_down</i> */}\r\n                                <h6>{item.likes.length} likes</h6>\r\n                                <h6>{item.title}</h6>\r\n                                <p>{item.body}</p>\r\n                                {\r\n                                    item.comments.map(record=>{\r\n                                        return(\r\n                                            <h6 key={record._id}><span style={{fontWeight:\"500\"}}>{record.postedBy.name} </span>{record.text}</h6>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                <form onSubmit={(e)=>{\r\n                                    e.preventDefault()\r\n                                    makeComment(e.target[0].value,item._id)\r\n                                    console.log(e.target[0].value); //e.target gave <form><input/></from> and since we \r\n                                    //have only one input inside the form sp e.target[0] then gor value of input e.target[0].value\r\n                                }}>\r\n                                    <input type=\"text\" placeholder=\"add a comment\"/>\r\n                                </form>\r\n                            </div>\r\n                        </div>    \r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","C:\\Users\\DELL\\Desktop\\socialNetwork\\client\\src\\components\\screens\\Reset.js",["92","93","94","95","96"],"import React, {useState,useContext} from 'react';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport M from 'materialize-css';\r\nimport { UserContext } from '../../App';\r\n\r\nconst SignIn=()=>{\r\n\r\n    const history=useHistory();\r\n\r\n    const [email,setEmail]=useState(\"\");\r\n    \r\n    const PostData=()=>{\r\n        // console.log(\"in\");\r\n        if(!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)){\r\n            M.toast({html: \"invalid email\",classes:\"#c62828 red darken-3\"})\r\n            return\r\n        }\r\n        console.log(localStorage.getItem(\"jwt\"));\r\n        fetch('/reset-password',{\r\n            method:\"post\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n                // \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                email\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n            console.log(data);\r\n            if(data.error){\r\n                M.toast({html: data.error, classes:\"#c62828 red darken-3\"})\r\n            }\r\n            else{\r\n                M.toast({html: data.message, classes:\"#43a047 green darken-1\"})\r\n                history.push('/signin');\r\n            }\r\n        }).catch(err=>{\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"mycard\">\r\n            <div className=\"card auth-card\">\r\n                <h2>SocialConnect</h2>\r\n                <input\r\n                type=\"text\"\r\n                placeholder=\"email\"\r\n                value={email}\r\n                onChange={(e)=>setEmail(e.target.value)}\r\n                />\r\n                <button className=\"btn waves-effect waves-light\" onClick={()=>PostData()}>\r\n                    Reset Password\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SignIn;","C:\\Users\\DELL\\Desktop\\socialNetwork\\client\\src\\components\\screens\\Newpassword.js",["97","98"],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":20,"column":10,"nodeType":"105","messageId":"106","endLine":20,"endColumn":15},{"ruleId":"107","severity":1,"message":"108","line":32,"column":5,"nodeType":"109","endLine":32,"endColumn":7,"suggestions":"110"},{"ruleId":"103","severity":1,"message":"111","line":7,"column":18,"nodeType":"105","messageId":"106","endLine":7,"endColumn":26},{"ruleId":"112","severity":1,"message":"113","line":35,"column":28,"nodeType":"114","messageId":"115","endLine":35,"endColumn":30},{"ruleId":"112","severity":1,"message":"113","line":64,"column":28,"nodeType":"114","messageId":"115","endLine":64,"endColumn":30},{"ruleId":"112","severity":1,"message":"113","line":92,"column":28,"nodeType":"114","messageId":"115","endLine":92,"endColumn":30},{"ruleId":"112","severity":1,"message":"113","line":128,"column":189,"nodeType":"114","messageId":"115","endLine":128,"endColumn":191},{"ruleId":"103","severity":1,"message":"104","line":8,"column":12,"nodeType":"105","messageId":"106","endLine":8,"endColumn":17},{"ruleId":"107","severity":1,"message":"116","line":167,"column":7,"nodeType":"109","endLine":167,"endColumn":14,"suggestions":"117"},{"ruleId":"118","severity":1,"message":"119","line":193,"column":20,"nodeType":"120","endLine":195,"endColumn":22},{"ruleId":"107","severity":1,"message":"121","line":23,"column":7,"nodeType":"109","endLine":23,"endColumn":12,"suggestions":"122"},{"ruleId":"123","severity":1,"message":"124","line":44,"column":23,"nodeType":"125","messageId":"126","endLine":44,"endColumn":24,"suggestions":"127"},{"ruleId":"123","severity":1,"message":"124","line":44,"column":48,"nodeType":"125","messageId":"126","endLine":44,"endColumn":49,"suggestions":"128"},{"ruleId":"112","severity":1,"message":"113","line":18,"column":19,"nodeType":"114","messageId":"115","endLine":18,"endColumn":21},{"ruleId":"107","severity":1,"message":"129","line":42,"column":7,"nodeType":"109","endLine":42,"endColumn":12,"suggestions":"130"},{"ruleId":"107","severity":1,"message":"131","line":176,"column":7,"nodeType":"109","endLine":176,"endColumn":9,"suggestions":"132"},{"ruleId":"112","severity":1,"message":"133","line":223,"column":80,"nodeType":"114","messageId":"115","endLine":223,"endColumn":82},{"ruleId":"118","severity":1,"message":"119","line":248,"column":20,"nodeType":"120","endLine":250,"endColumn":22},{"ruleId":"103","severity":1,"message":"111","line":7,"column":18,"nodeType":"105","messageId":"106","endLine":7,"endColumn":26},{"ruleId":"112","severity":1,"message":"113","line":36,"column":28,"nodeType":"114","messageId":"115","endLine":36,"endColumn":30},{"ruleId":"112","severity":1,"message":"113","line":65,"column":28,"nodeType":"114","messageId":"115","endLine":65,"endColumn":30},{"ruleId":"112","severity":1,"message":"113","line":93,"column":28,"nodeType":"114","messageId":"115","endLine":93,"endColumn":30},{"ruleId":"112","severity":1,"message":"113","line":129,"column":189,"nodeType":"114","messageId":"115","endLine":129,"endColumn":191},{"ruleId":"103","severity":1,"message":"134","line":1,"column":25,"nodeType":"105","messageId":"106","endLine":1,"endColumn":35},{"ruleId":"103","severity":1,"message":"135","line":2,"column":9,"nodeType":"105","messageId":"106","endLine":2,"endColumn":13},{"ruleId":"103","severity":1,"message":"136","line":4,"column":10,"nodeType":"105","messageId":"106","endLine":4,"endColumn":21},{"ruleId":"123","severity":1,"message":"124","line":14,"column":23,"nodeType":"125","messageId":"126","endLine":14,"endColumn":24,"suggestions":"137"},{"ruleId":"123","severity":1,"message":"124","line":14,"column":48,"nodeType":"125","messageId":"126","endLine":14,"endColumn":49,"suggestions":"138"},{"ruleId":"103","severity":1,"message":"134","line":1,"column":25,"nodeType":"105","messageId":"106","endLine":1,"endColumn":35},{"ruleId":"103","severity":1,"message":"136","line":4,"column":10,"nodeType":"105","messageId":"106","endLine":4,"endColumn":21},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["141"],"'dispatch' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'dispatch' and 'state'. Either include them or remove the dependency array.",["142"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'uploadFields'. Either include it or remove the dependency array.",["143"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["144","145"],["146","147"],"React Hook useEffect has missing dependencies: 'body', 'history', and 'title'. Either include them or remove the dependency array.",["148"],"React Hook useEffect has a missing dependency: 'userid'. Either include it or remove the dependency array.",["149"],"Expected '!==' and instead saw '!='.","'useContext' is defined but never used.","'Link' is defined but never used.","'UserContext' is defined but never used.",["150","151"],["152","153"],"no-global-assign","no-unsafe-negation",{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},{"messageId":"160","fix":"161","desc":"162"},{"messageId":"163","fix":"164","desc":"165"},{"messageId":"160","fix":"166","desc":"162"},{"messageId":"163","fix":"167","desc":"165"},{"desc":"168","fix":"169"},{"desc":"170","fix":"171"},{"messageId":"160","fix":"172","desc":"162"},{"messageId":"163","fix":"173","desc":"165"},{"messageId":"160","fix":"174","desc":"162"},{"messageId":"163","fix":"175","desc":"165"},"Update the dependencies array to be: [dispatch, history]",{"range":"176","text":"177"},"Update the dependencies array to be: [dispatch, image, state]",{"range":"178","text":"179"},"Update the dependencies array to be: [uploadFields, url]",{"range":"180","text":"181"},"removeEscape",{"range":"182","text":"183"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"184","text":"185"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"186","text":"183"},{"range":"187","text":"185"},"Update the dependencies array to be: [body, history, title, url]",{"range":"188","text":"189"},"Update the dependencies array to be: [userid]",{"range":"190","text":"191"},{"range":"192","text":"183"},{"range":"193","text":"185"},{"range":"194","text":"183"},{"range":"195","text":"185"},[1583,1585],"[dispatch, history]",[7704,7711],"[dispatch, image, state]",[1202,1207],"[uploadFields, url]",[2059,2060],"",[2059,2059],"\\",[2084,2085],[2084,2084],[1491,1496],"[body, history, title, url]",[9250,9252],"[userid]",[365,366],[365,365],[390,391],[390,390]]